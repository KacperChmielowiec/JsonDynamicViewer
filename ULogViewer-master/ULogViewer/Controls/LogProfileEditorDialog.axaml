<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="using:System"
        xmlns:ia="using:Avalonia.Xaml.Interactivity"
        xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
		xmlns:abControls="using:CarinaStudio.Controls"
		xmlns:aConverters="using:Avalonia.Data.Converters"
		xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
		xmlns:asMedia="using:CarinaStudio.AppSuite.Media"
        xmlns:app="clr-namespace:CarinaStudio.ULogViewer;assembly=ULogViewer"
		xmlns:appCategorizing="using:CarinaStudio.ULogViewer.ViewModels.Categorizing"
        xmlns:appControls="clr-namespace:CarinaStudio.ULogViewer.Controls;assembly=ULogViewer"
        xmlns:appConverters="clr-namespace:CarinaStudio.ULogViewer.Converters;assembly=ULogViewer"
        xmlns:appDataSources="clr-namespace:CarinaStudio.ULogViewer.Logs.DataSources;assembly=ULogViewer"
        xmlns:appLogProfiles="clr-namespace:CarinaStudio.ULogViewer.Logs.Profiles;assembly=ULogViewer"
        xmlns:appLogs="clr-namespace:CarinaStudio.ULogViewer.Logs;assembly=ULogViewer"
		xmlns:cs="using:CarinaStudio"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.ULogViewer.Controls.LogProfileEditorDialog"
        Classes="Dialog"
		Name="window"
        Width="{DynamicResource Double/LogProfileEditorDialog.Width}">

	<!-- Styles -->
	<Window.Styles>
		<Style Selector="ListBox">
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="VirtualizationMode" Value="None"/>
		</Style>
		<Style Selector="ListBoxItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ListBox.Item.WithInPlaceActions.Padding}"/>
		</Style>
	</Window.Styles>

	<!-- Content -->
	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel" DockPanel.Dock="Bottom">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_IconControlButton" Command="{Binding $parent[Window].OpenDocumentation}" ToolTip.Tip="{DynamicResource String/Common.Help}">
					<Image Classes="Dialog_IconControlButton_Icon" Source="{StaticResource Image/Icon.Question}"/>
				</Button>
				<Separator Classes="Dialog_Separator_Small"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].GenerateResultCommand}" Content="{DynamicResource String/Common.OK}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}"/>
			</StackPanel>
		</Border>

		<!-- Content -->
		<ScrollViewer Name="baseScrollViewer" Classes="Dialog_ContentPanel" HorizontalScrollBarVisibility="Disabled" MaxHeight="{DynamicResource Double/LogProfileEditorDialog.Content.MaxHeight}">
			<StackPanel Classes="Dialog_ContentPanel_WithHeader">

				<!-- Header -->
				<Border Classes="Dialog_TextBlock_Header1">
					<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileEditorDialog.Common}"/>
				</Border>
				
				<!-- Name -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.Name}"/>
				<TextBox Name="nameTextBox" Classes="Dialog_TextBox" MaxLength="256" PropertyChanged="OnEditorControlPropertyChanged"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Description -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.Description}"/>
				<TextBox Name="descriptionTextBox" Classes="Dialog_TextBox" MaxLength="1024"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Icon -->
				<Grid ColumnDefinitions="*,Auto,*" HorizontalAlignment="Stretch">
					<StackPanel>
						<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.Icon}"/>
						<appControls:LogProfileIconComboBox Name="iconComboBox" Classes="Dialog_ComboBox" IconColor="{Binding #iconColorComboBox.SelectedItem}"/>
					</StackPanel>
					<Separator Classes="Dialog_Separator_Small" Grid.Column="1"/>
					<StackPanel Grid.Column="2">
						<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.IconColor}"/>
						<appControls:LogProfileIconColorComboBox Name="iconColorComboBox" Classes="Dialog_ComboBox"/>
					</StackPanel>
				</Grid>
				<Separator Classes="Dialog_Separator"/>

				<!-- Is template -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.IsTemplate}"/>
				<ToggleSwitch Name="isTemplateSwitch" Classes="Dialog_ToggleSwitch"/>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.IsTemplate.Description}"/>
				<Separator Classes="Dialog_Separator_Large"/>

				<!-- Header -->
				<Border Classes="Dialog_TextBlock_Header1">
					<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileEditorDialog.LogReading}"/>
				</Border>

				<!-- DataSource -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.DataSourceProvider}"/>
				<Grid ColumnDefinitions="*,Auto">
					<ComboBox Name="dataSourceProviderComboBox" HorizontalAlignment="Stretch" Items="{Binding $parent[Window].DataSourceProviders}" VerticalAlignment="Center">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="Auto,Auto,Auto,*">
									<Panel Classes="ComboBoxItem_Icon">
										<Image Classes="Icon" IsVisible="{Binding $parent[ComboBoxItem].IsSelected}" Source="{Binding Converter={x:Static appConverters:LogDataSourceProviderIconConverter.Default}, ConverterParameter=Light}"/>
										<Image Classes="Icon" IsVisible="{Binding !$parent[ComboBoxItem].IsSelected}" Source="{Binding Converter={x:Static appConverters:LogDataSourceProviderIconConverter.Default}}"/>
									</Panel>
									<TextBlock Classes="ComboBoxItem_TextBlock" Text="{Binding DisplayName}" Grid.Column="1"/>
									<Separator Classes="Dialog_Separator_Small" Grid.Column="2" IsVisible="{Binding #proVersionOnly.IsVisible}"/>
									<TextBlock Classes="ComboBoxItem_TextBlock" Name="proVersionOnly" Grid.Column="3" Text="{DynamicResource String/LogProfileEditorDialog.DataSourceProvider.ProVersionOnly}">
										<TextBlock.IsVisible>
											<MultiBinding Converter="{x:Static aConverters:BoolConverters.And}">
												<Binding Path="!IsProVersionActivated" ElementName="window"/>
												<Binding Path="IsProVersionOnly"/>
											</MultiBinding>
										</TextBlock.IsVisible>
									</TextBlock>
								</Grid>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].SetDataSourceOptions}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Edit}" VerticalAlignment="Center">
						<Button.IsEnabled>
							<MultiBinding Converter="{x:Static aConverters:BoolConverters.And}">
								<Binding Path="HasDataSourceOptions" ElementName="window"/>
								<MultiBinding Converter="{x:Static aConverters:BoolConverters.Or}">
									<Binding Path="IsProVersionActivated" ElementName="window"/>
									<Binding Path="!SelectedItem.IsProVersionOnly" ElementName="dataSourceProviderComboBox"/>
								</MultiBinding>
							</MultiBinding>
						</Button.IsEnabled>
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Settings}"/>
					</Button>
				</Grid>
				<abControls:LinkTextBlock Classes="Dialog_LinkTextBlock_Description" Command="{Binding $parent[Window].ShowScriptLogDataSourceProvidersDialog}" Text="{DynamicResource String/LogProfileEditorDialog.ScriptLogDataSourceProviders}"/>
				<Grid Classes="Dialog_IconText_Container_Description" ColumnDefinitions="Auto,*">
					<Grid.IsVisible>
						<MultiBinding Converter="{x:Static aConverters:BoolConverters.And}">
							<Binding Path="!IsValidDataSourceOptions" ElementName="window"/>
						</MultiBinding>
					</Grid.IsVisible>
					<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Error.Outline.Colored}"/>
					<TextBlock Classes="Dialog_Icon_TextBlock_Description_Error" Grid.Column="1" Text="{DynamicResource String/LogProfileEditorDialog.InvalidDataSourceOptions}"/>
				</Grid>
				<Separator Classes="Dialog_Separator"/>

				<!-- Allow multiple files -->
				<StackPanel Name="allowMultipleFilesPanel" HorizontalAlignment="Stretch" Orientation="Vertical">
					<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.AllowMultipleFiles}"/>
					<ToggleSwitch Name="allowMultipleFilesSwitch" Classes="Dialog_ToggleSwitch"/>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

				<!-- Is working directory needed -->
				<StackPanel HorizontalAlignment="Stretch" IsEnabled="{Binding $parent[Window].IsWorkingDirectorySupported}" Orientation="Vertical">
					<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.IsWorkingDirectoryNeeded}"/>
					<ToggleSwitch Name="workingDirNeededSwitch" Classes="Dialog_ToggleSwitch"/>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

				<!-- Is administrator needed -->
				<StackPanel Name="isAdminNeededPanel" HorizontalAlignment="Stretch" Orientation="Vertical">
					<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.IsAdministratorNeeded}"/>
					<ToggleSwitch Name="adminNeededSwitch" Classes="Dialog_ToggleSwitch"/>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

				<!-- Is continuous reading -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.IsContinuousReading}"/>
				<ToggleSwitch Name="continuousReadingSwitch" Classes="Dialog_ToggleSwitch">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding #dataSourceProviderComboBox.SelectedItem.Name}" ComparisonCondition="Equal" Value="File">
							<iaCore:ChangePropertyAction PropertyName="IsChecked" Value="False"/>
							<iaCore:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding #dataSourceProviderComboBox.SelectedItem.Name}" ComparisonCondition="NotEqual" Value="File">
							<iaCore:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
				</ToggleSwitch>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.IsContinuousReading.Description}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Restart reading delay -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.RestartReadingDelay}"/>
				<abControls:IntegerTextBox Name="restartReadingDelayTextBox" Classes="Dialog_TextBox" IsEnabled="{Binding #continuousReadingSwitch.IsChecked}" IsNullValueAllowed="False" Maximum="3600000" Minimum="0"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Raw log level property -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.RawLogLevelPropertyName}"/>
				<ComboBox Name="rawLogLevelPropertyComboBox" Classes="Dialog_ComboBox" Items="{x:Static appLogs:Log.PropertyNames}">
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Converter={x:Static appConverters:LogPropertyNameConverter.Default}}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
								<TextBlock Opacity="0.3" Text="{Binding StringFormat={} ({0})}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.RawLogLevelPropertyName.Description}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Log level map -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.LogLevelMapForReading}"/>
				<Grid ColumnDefinitions="*,Auto">
					<asControls:ListBox Name="logLevelMapForReadingListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Items="{Binding $parent[Window].LogLevelMapEntriesForReading}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="*,*">
									<TextBlock Classes="ListBoxItem_TextBlock" Text="{Binding Key}"/>
									<Border Classes="InPlaceAction_Reserved"/>
									<DockPanel Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
										<StackPanel DockPanel.Dock="Right" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveLogLevelMapEntryCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditLogLevelMapEntryForReadingCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
										</StackPanel>
										<Grid ColumnDefinitions="Auto,*">
											<Border Classes="ListBoxItem_Icon" Background="{Binding Value, Converter={x:Static appConverters:LogLevelBrushConverter.Background}}" BorderBrush="{DynamicResource ComboBoxItemForeground}" BorderThickness="1"/>
											<TextBlock Classes="ListBoxItem_TextBlock" Grid.Column="1" Text="{Binding Value, Converter={x:Static appControls:SessionView.LogLevelNameConverter}}"/>
										</Grid>
									</DockPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddLogLevelMapEntryForReading}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.LogLevelMapForReading.Description}" VerticalAlignment="Top"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Log patterns -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.LogPatterns}"/>
				<Grid ColumnDefinitions="*,Auto">
					<asControls:ListBox Name="logPatternListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Items="{Binding $parent[Window].LogPatterns}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate DataType="{x:Type appLogs:LogPattern}">
								<Grid ColumnDefinitions="*,Auto">
									<asControls:SyntaxHighlightingTextBlock DefinitionSet="{Binding $parent[Window].RegexSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" Text="{Binding Regex}" TextTrimming="None"/>
									<Border Classes="InPlaceAction_Reserved"/>
									<StackPanel Grid.Column="1" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveLogPatternCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].CopyLogPattern}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Copy}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Copy}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditLogPatternCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].MoveLogPatternUpCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.MoveUp}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.MoveUp}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].MoveLogPatternDownCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.MoveDown}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.MoveDown}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
									</StackPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddLogPattern}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.LogPatterns.Description}" VerticalAlignment="Top"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Log string encoding for reading -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.LogStringEncodingForReading}"/>
				<asControls:EnumComboBox Name="logStringEncodingForReadingComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appLogs:LogStringEncoding}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Timestamp encoding for reading -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimestampEncodingForReading}"/>
				<asControls:EnumComboBox Name="timestampEncodingForReadingComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appLogs:LogTimestampEncoding}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Timestamp format for reading -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimestampFormatsForReading}"/>
				<Grid ColumnDefinitions="*,Auto">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding #timestampEncodingForReadingComboBox.SelectedItem}" Value="Custom">
							<iaCore:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding #timestampEncodingForReadingComboBox.SelectedItem}" ComparisonCondition="NotEqual" Value="Custom">
							<iaCore:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
					<asControls:ListBox Name="timestampFormatsForReadingListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Items="{Binding $parent[Window].TimestampFormatsForReading}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="*,Auto">
									<asControls:SyntaxHighlightingTextBlock DefinitionSet="{Binding $parent[Window].DateTimeFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" Text="{Binding}" TextTrimming="None"/>
									<Border Classes="InPlaceAction_Reserved"/>
									<StackPanel Grid.Column="1" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveTimestampFormatForReadingCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditTimestampFormatForReadingCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
									</StackPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddTimestampFormatForReading}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<Separator Classes="Dialog_Separator"/>

				<!-- Time span encoding for reading -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimeSpanEncodingForReading}"/>
				<asControls:EnumComboBox Name="timeSpanEncodingForReadingComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appLogs:LogTimeSpanEncoding}"/>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.TimeSpanEncodingForReading.Description}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Time span format for reading -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimeSpanFormatsForReading}"/>
				<Grid ColumnDefinitions="*,Auto">
					<ia:Interaction.Behaviors>
						<iaCore:DataTriggerBehavior Binding="{Binding #timeSpanEncodingForReadingComboBox.SelectedItem}" Value="Custom">
							<iaCore:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
						</iaCore:DataTriggerBehavior>
						<iaCore:DataTriggerBehavior Binding="{Binding #timeSpanEncodingForReadingComboBox.SelectedItem}" ComparisonCondition="NotEqual" Value="Custom">
							<iaCore:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
						</iaCore:DataTriggerBehavior>
					</ia:Interaction.Behaviors>
					<asControls:ListBox Name="timeSpanFormatsForReadingListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Items="{Binding $parent[Window].TimeSpanFormatsForReading}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="*,Auto">
									<asControls:SyntaxHighlightingTextBlock DefinitionSet="{Binding $parent[Window].TimeSpanFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" Text="{Binding}" TextTrimming="None"/>
									<Border Classes="InPlaceAction_Reserved"/>
									<StackPanel Grid.Column="1" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveTimeSpanFormatForReadingCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditTimeSpanFormatForReadingCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
									</StackPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddTimeSpanFormatForReading}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<Separator Classes="Dialog_Separator_Large"/>

				<!-- Header -->
				<Border Classes="Dialog_TextBlock_Header1">
					<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileEditorDialog.LogDisplaying}"/>
				</Border>
				
				<!-- Visible log properties -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.VisibleLogProperties}"/>
				<Grid ColumnDefinitions="*,Auto">
					<asControls:ListBox Name="visibleLogPropertyListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Grid.IsSharedSizeScope="True" Items="{Binding $parent[Window].VisibleLogProperties}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate DataType="{x:Type appLogProfiles:LogProperty}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" SharedSizeGroup="DisplayName"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<TextBlock Name="displayNameTextBlock" Text="{Binding DisplayName, Converter={x:Static appConverters:LogPropertyNameConverter.Default}}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
									<abControls:FormattedTextBlock Arg1="{DynamicResource String/Common.Empty}" Format="({0})" IsVisible="{Binding #displayNameTextBlock.Text, Converter={x:Static StringConverters.IsNullOrEmpty}}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
									<Border Classes="InPlaceAction_Reserved"/>
									<abControls:FormattedTextBlock Arg1="{Binding Name}" Format="({0})" Grid.Column="1" Margin="{StaticResource Thickness/LogProfileEditorDialog.VisibleLogPropertyListBox.Name.Margin}" Opacity="{StaticResource Double/LogProfileEditorDialog.VisibleLogPropertyListBox.Name.Opacity}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
									<StackPanel Grid.Column="2" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveVisibleLogPropertyCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditVisibleLogPropertyCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].MoveVisibleLogPropertyUpCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.MoveUp}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.MoveUp}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].MoveVisibleLogPropertyDownCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.MoveDown}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.MoveDown}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
									</StackPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddVisibleLogProperty}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.VisibleLogProperties.Description}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Timestamp format for displaying -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimestampFormatForDisplaying}"/>
				<asControls:SyntaxHighlightingTextBox Name="timestampFormatForDisplayingTextBox" Classes="Dialog_TextBox" DefinitionSet="{Binding $parent[Window].DateTimeFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" MaxLength="256"/>
				<abControls:LinkTextBlock Classes="Dialog_LinkTextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.FormatDescription}" Uri="{x:Static app:Uris.DateTimeFormatReference}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Time span format for displaying -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimeSpanFormatForDisplaying}"/>
				<asControls:SyntaxHighlightingTextBox Name="timeSpanFormatForDisplayingTextBox" Classes="Dialog_TextBox" DefinitionSet="{Binding $parent[Window].TimeSpanFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" MaxLength="256"/>
				<abControls:LinkTextBlock Classes="Dialog_LinkTextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.FormatDescription}" Uri="{x:Static app:Uris.TimeSpanFormatReference}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Color indicator -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.ColorIndicator}"/>
				<asControls:EnumComboBox Name="colorIndicatorComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appLogProfiles:LogColorIndicator}"/>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.ColorIndicator.Description}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Sort key -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.SortKey}"/>
				<asControls:EnumComboBox Name="sortKeyComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appLogProfiles:LogSortKey}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Sort direction -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.SortDirection}"/>
				<asControls:EnumComboBox Name="sortDirectionComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type app:SortDirection}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Timestamp category granularity -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimestampCategoryGranularity}"/>
				<asControls:EnumComboBox Name="timestampCategoryGranularityComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appCategorizing:TimestampDisplayableLogCategoryGranularity}"/>
				<Separator Classes="Dialog_Separator_Large"/>

				<!-- Header -->
				<Border Classes="Dialog_TextBlock_Header1">
					<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileEditorDialog.LogWriting}"/>
				</Border>
				
				<!-- Log writing formats -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.LogWritingFormats}"/>
				<Grid ColumnDefinitions="*,Auto">
					<asControls:ListBox Name="logWritingFormatListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Items="{Binding $parent[Window].LogWritingFormats}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="*,Auto">
									<asControls:SyntaxHighlightingTextBlock DefinitionSet="{Binding $parent[Window].LogWritingFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" Text="{Binding}" TextWrapping="NoWrap" TextTrimming="None"/>
									<Border Classes="InPlaceAction_Reserved"/>
									<StackPanel Grid.Column="1" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveLogWritingFormatCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditLogWritingFormatCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].MoveLogWritingFormatUpCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.MoveUp}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.MoveUp}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].MoveLogWritingFormatDownCommand}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.MoveDown}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.MoveDown}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
									</StackPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddLogWritingFormat}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.LogWritingFormats.Description}"/>
				<Separator Classes="Dialog_Separator"/>
				
				<!-- Log level map -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.LogLevelMapForWriting}"/>
				<Grid ColumnDefinitions="*,Auto">
					<asControls:ListBox Name="logLevelMapForWritingListBox" DoubleClickOnItem="OnListBoxDoubleClickOnItem" Items="{Binding $parent[Window].LogLevelMapEntriesForWriting}" LostFocus="OnListBoxLostFocus" SelectionChanged="OnListBoxSelectionChanged">
						<asControls:ListBox.ItemTemplate>
							<DataTemplate>
								<Grid ColumnDefinitions="*,*">
									<Grid ColumnDefinitions="Auto,*">
										<Border Classes="ListBoxItem_Icon" Background="{Binding Key, Converter={x:Static appConverters:LogLevelBrushConverter.Background}}" BorderBrush="{DynamicResource ComboBoxItemForeground}" BorderThickness="1"/>
										<TextBlock Classes="ListBoxItem_TextBlock" Grid.Column="1" Text="{Binding Key, Converter={x:Static appControls:SessionView.LogLevelNameConverter}}"/>
									</Grid>
									<Border Classes="InPlaceAction_Reserved"/>
									<DockPanel Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
										<StackPanel DockPanel.Dock="Right" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveLogLevelMapEntryCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditLogLevelMapEntryForWritingCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
										</StackPanel>
										<TextBlock Classes="ListBoxItem_TextBlock" Text="{Binding Value}"/>
									</DockPanel>
								</Grid>
							</DataTemplate>
						</asControls:ListBox.ItemTemplate>
					</asControls:ListBox>
					<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddLogLevelMapEntryForWriting}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
						<Image Classes="BrowseButtonIcon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</Grid>
				<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.LogLevelMapForWriting.Description}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Log string format for writing -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.LogStringEncodingForWriting}"/>
				<asControls:EnumComboBox Name="logStringEncodingForWritingComboBox" Classes="Dialog_ComboBox" EnumType="{x:Type appLogs:LogStringEncoding}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Timestamp format for writing -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimestampFormatForWriting}"/>
				<asControls:SyntaxHighlightingTextBox Name="timestampFormatForWritingTextBox" Classes="Dialog_TextBox" DefinitionSet="{Binding $parent[Window].DateTimeFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" MaxLength="256" Watermark="{DynamicResource String/LogProfileEditorDialog.TimestampFormatForWriting.Watermark}"/>
				<abControls:LinkTextBlock Classes="Dialog_LinkTextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.FormatDescription}" Uri="{x:Static app:Uris.DateTimeFormatReference}"/>
				<Separator Classes="Dialog_Separator"/>

				<!-- Time span format for writing -->
				<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/LogProfileEditorDialog.TimeSpanFormatForWriting}"/>
				<asControls:SyntaxHighlightingTextBox Name="timeSpanFormatForWritingTextBox" Classes="Dialog_TextBox" DefinitionSet="{Binding $parent[Window].TimeSpanFormatSyntaxHighlightingDefinitionSet}" FontFamily="{Binding PatternFontFamily, Source={x:Static appControls:ControlFonts.Default}}" MaxLength="256" Watermark="{DynamicResource String/LogProfileEditorDialog.TimeSpanFormatForWriting.Watermark}"/>
				<abControls:LinkTextBlock Classes="Dialog_LinkTextBlock_Description" Text="{DynamicResource String/LogProfileEditorDialog.FormatDescription}" Uri="{x:Static app:Uris.TimeSpanFormatReference}"/>

			</StackPanel>
		</ScrollViewer>
		
	</DockPanel>
  
</Window>

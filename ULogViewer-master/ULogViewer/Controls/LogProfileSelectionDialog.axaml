<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ia="using:Avalonia.Xaml.Interactivity"
        xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
		xmlns:abControls="using:CarinaStudio.Controls"
		xmlns:aConverters="using:Avalonia.Data.Converters"
        xmlns:appControls="clr-namespace:CarinaStudio.ULogViewer.Controls;assembly=ULogViewer"
        xmlns:appConverters="clr-namespace:CarinaStudio.ULogViewer.Converters;assembly=ULogViewer"
        xmlns:appProfiles="clr-namespace:CarinaStudio.ULogViewer.Logs.Profiles;assembly=ULogViewer"
		xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.ULogViewer.Controls.LogProfileSelectionDialog"
        Classes="Dialog"
		Name="window"
        Title="{DynamicResource String/LogProfileSelectionDialog.Title}"
        Width="{DynamicResource Double/LogProfileSelectionDialog.Width}">

	<!-- Styles -->
	<Window.Styles>
		<Style Selector="ListBox.LogProfiles">
			<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate DataType="{x:Type appProfiles:LogProfile}">
						<Border Background="{x:Static Brushes.Transparent}" DoubleTapped="OnLogProfileItemDoubleTapped" Padding="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Padding}">
							<Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto,Auto">

								<Grid.Styles>
									<Style Selector="Panel.LogProfileInfo:disabled">
										<Setter Property="Opacity" Value="{StaticResource Double/Icon.Opacity.Disabled}"/>
									</Style>
									<Style Selector="TextBlock.LogProfileInfo:disabled">
										<Setter Property="Opacity" Value="{StaticResource Double/Icon.Opacity.Disabled}"/>
									</Style>
									<Style Selector="WrapPanel.LogProfileInfo:disabled">
										<Setter Property="Opacity" Value="{StaticResource Double/Icon.Opacity.Disabled}"/>
									</Style>
								</Grid.Styles>

								<!-- Icon -->
								<Panel Grid.RowSpan="3" Height="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Icon.Size}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Icon.Margin}" VerticalAlignment="Top" Width="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Icon.Size}">
									<Panel.IsEnabled>
										<MultiBinding Converter="{x:Static aConverters:BoolConverters.Or}">
											<Binding Path="IsProVersionActivated" ElementName="window"/>
											<Binding Path="!DataSourceProvider.IsProVersionOnly"/>
										</MultiBinding>
									</Panel.IsEnabled>
									<Image Classes="Icon" Source="{Binding Converter={x:Static appConverters:LogProfileIconConverter.Default}}" IsVisible="{Binding !$parent[ListBoxItem].IsSelected}"/>
									<Image Classes="Icon" Source="{Binding Converter={x:Static appConverters:LogProfileIconConverter.Default}, ConverterParameter=Light}}" IsVisible="{Binding $parent[ListBoxItem].IsSelected}"/>
								</Panel>
								
								<!-- Name -->
								<Grid ColumnDefinitions="*,Auto" Grid.Column="1" HorizontalAlignment="Left">
									<TextBlock Classes="LogProfileInfo" FontSize="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Name.FontSize}" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Name.Margin}" Text="{Binding Name}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center">
										<TextBlock.IsEnabled>
											<MultiBinding Converter="{x:Static aConverters:BoolConverters.Or}">
												<Binding Path="IsProVersionActivated" ElementName="window"/>
												<Binding Path="!DataSourceProvider.IsProVersionOnly"/>
											</MultiBinding>
										</TextBlock.IsEnabled>
									</TextBlock>
									<Panel Background="{x:Static Brushes.Transparent}" Height="{StaticResource Double/LogProfileSelectionDialog.LogProfile.ProVersionIcon.Size}" Grid.Column="1" Margin="{StaticResource Thickness/LogProfileSelectionDialog.LogProfile.ProVersionIcon.Margin}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.ProVersionOnly}" VerticalAlignment="Center" Width="{StaticResource Double/LogProfileSelectionDialog.LogProfile.ProVersionIcon.Size}">
										<Panel.IsVisible>
											<MultiBinding Converter="{x:Static aConverters:BoolConverters.And}">
												<Binding Path="!IsProVersionActivated" ElementName="window"/>
												<Binding Path="DataSourceProvider.IsProVersionOnly"/>
											</MultiBinding>
										</Panel.IsVisible>
										<Image Classes="Icon" IsVisible="{Binding !$parent[ListBoxItem].IsSelected}" Source="{StaticResource Image/Icon.Professional.Colored}"/>
										<Image Classes="Icon" IsVisible="{Binding $parent[ListBoxItem].IsSelected}" Source="{StaticResource Image/Icon.Professional}"/>
									</Panel>
								</Grid>

								<!-- Description -->
								<Panel Classes="LogProfileInfo" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Description.Margin}">
									<Panel.IsEnabled>
										<MultiBinding Converter="{x:Static aConverters:BoolConverters.Or}">
											<Binding Path="IsProVersionActivated" ElementName="window"/>
											<Binding Path="!DataSourceProvider.IsProVersionOnly"/>
										</MultiBinding>
									</Panel.IsEnabled>
									<abControls:TextBlock FontSize="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.FontSize}" IsVisible="{Binding HasDescription}" MaxLines="5" Opacity="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.Opacity}" Text="{Binding Description}" TextTrimming="CharacterEllipsis" TextWrapping="WrapWithOverflow"/>
									<TextBlock FontSize="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.FontSize}" IsVisible="{Binding !HasDescription}" Opacity="{DynamicResource Double/LogProfileSelectionDialog.LogProfile.Description.Opacity}" Text="{DynamicResource String/LogProfileSelectionDialog.NoDescription}" TextTrimming="CharacterEllipsis"/>
								</Panel>

								<!-- Labels -->
								<WrapPanel Classes="LogProfileInfo" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Orientation="Horizontal">
									<WrapPanel.IsEnabled>
										<MultiBinding Converter="{x:Static aConverters:BoolConverters.Or}">
											<Binding Path="IsProVersionActivated" ElementName="window"/>
											<Binding Path="!DataSourceProvider.IsProVersionOnly"/>
										</MultiBinding>
									</WrapPanel.IsEnabled>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{Binding DataSourceProvider.DisplayName}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsBuiltIn}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.BuiltInLogProfile}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsContinuousReading}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.IsContinuousReading}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsWorkingDirectoryNeeded}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.IsWorkingDirectoryNeeded}"/>
									</Border>
									<Border Classes="LogProfileSelectionDialog_LogProfile_Label" IsVisible="{Binding IsAdministratorNeeded}">
										<TextBlock Classes="LogProfileSelectionDialog_LogProfile_Label" Text="{DynamicResource String/LogProfileSelectionDialog.IsAdministratorNeeded}"/>
									</Border>
								</WrapPanel>

								<!-- Actions -->
								<StackPanel Grid.Column="2" Grid.RowSpan="3" Orientation="Horizontal" VerticalAlignment="Top">
									<StackPanel.IsVisible>
										<MultiBinding Converter="{x:Static aConverters:BoolConverters.And}">
											<Binding Path="IsPointerOver" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}"/>
											<MultiBinding Converter="{x:Static aConverters:BoolConverters.Or}">
												<Binding Path="IsProVersionActivated" ElementName="window"/>
												<Binding Path="!DataSourceProvider.IsProVersionOnly"/>
											</MultiBinding>
										</MultiBinding>
									</StackPanel.IsVisible>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveLogProfileCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" IsVisible="{Binding !IsBuiltIn}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.RemoveLogProfile}">
										<asControls:Image Classes="InPlaceAction_Icon">
											<DrawingImage>
												<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
											</DrawingImage>
										</asControls:Image>
									</Button>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].ExportLogProfileCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.ExportLogProfile}">
										<asControls:Image Classes="InPlaceAction_Icon">
											<DrawingImage>
												<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Export}"/>
											</DrawingImage>
										</asControls:Image>
									</Button>
									<StackPanel IsVisible="{Binding $parent[Window].Filter, Converter={x:Static aConverters:ObjectConverters.IsNull}}" Orientation="Horizontal">
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].CopyLogProfileCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Copy}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Copy}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
										<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditLogProfileCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" IsVisible="{Binding !IsBuiltIn}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.EditLogProfile}">
											<asControls:Image Classes="InPlaceAction_Icon">
												<DrawingImage>
													<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
												</DrawingImage>
											</asControls:Image>
										</Button>
									</StackPanel>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].PinUnpinLogProfileCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" IsVisible="{Binding !IsTemplate}" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.PinUnpinLogProfile}">
										<asControls:Image Classes="InPlaceAction_Icon">
											<DrawingImage>
												<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Pin}"/>
											</DrawingImage>
										</asControls:Image>
									</Button>
								</StackPanel>

							</Grid>
						</Border>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="VirtualizationMode" Value="None"/>
		</Style>
	</Window.Styles>
	
	<!-- Content -->
	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel" DockPanel.Dock="Bottom">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].AddLogProfile}" Content="{DynamicResource String/LogProfileSelectionDialog.AddLogProfile}" IsVisible="{Binding $parent[Window].Filter, Converter={x:Static aConverters:ObjectConverters.IsNull}}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].ImportLogProfile}" Content="{DynamicResource String/LogProfileSelectionDialog.ImportLogProfile}" IsVisible="{Binding $parent[Window].Filter, Converter={x:Static aConverters:ObjectConverters.IsNull}}"/>
				<Border Width="{DynamicResource Double/Dialog.Separator.Height.Small}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].GenerateResultCommand}" Content="{DynamicResource String/Common.OK}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}"/>
			</StackPanel>
		</Border>

		<!-- Log profiles -->
		<ScrollViewer Name="scrollViewer" MaxHeight="{DynamicResource Double/LogProfileSelectionDialog.Content.MaxHeight}">
			<StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">

				<!-- Pinned profiles -->
				<StackPanel HorizontalAlignment="Stretch" IsVisible="{Binding $parent[Window].PinnedLogProfiles.Count}" Orientation="Vertical">
					<Border Classes="Dialog_TextBlock_Header1" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}">
						<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileSelectionDialog.PinnedLogProfiles}"/>
					</Border>
					<ListBox Name="pinnedLogProfileListBox" Classes="LogProfiles" Items="{Binding $parent[Window].PinnedLogProfiles}" SelectionChanged="OnPinnedLogProfilesSelectionChanged">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="Margin" Value="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Margin}"/>
								<Setter Property="Padding" Value="0"/>
							</Style>
						</ListBox.Styles>
					</ListBox>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

				<!-- Recently used profiles -->
				<StackPanel HorizontalAlignment="Stretch" IsVisible="{Binding $parent[Window].RecentlyUsedLogProfiles.Count}" Orientation="Vertical">
					<Border Classes="Dialog_TextBlock_Header1" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}">
						<Grid ColumnDefinitions="*,Auto">
							<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileSelectionDialog.RecentlyUsedLogProfiles}"/>
							<Button Classes="InPlaceAction_Button" Command="{Binding ResetRecentlyUsedProfiles, Source={x:Static appProfiles:LogProfileManager.Default}}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/LogProfileSelectionDialog.ResetRecentlyUsedLogProfiles}">
								<Image Classes="InPlaceAction_Icon" Source="{StaticResource Image/Icon.Delete}"/>
							</Button>
						</Grid>
					</Border>
					<ListBox Name="recentlyUsedLogProfileListBox" Classes="LogProfiles" Items="{Binding $parent[Window].RecentlyUsedLogProfiles}" SelectionChanged="OnRecentlyUsedLogProfilesSelectionChanged">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="Margin" Value="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Margin}"/>
								<Setter Property="Padding" Value="0"/>
							</Style>
						</ListBox.Styles>
					</ListBox>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>
				
				<!-- Other profiles -->
				<StackPanel HorizontalAlignment="Stretch" IsVisible="{Binding $parent[Window].OtherLogProfiles.Count}" Orientation="Vertical">
					<Border Classes="Dialog_TextBlock_Header1" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}">
						<Panel>
							<TextBlock Classes="Dialog_TextBlock_Header1" IsVisible="{Binding $parent[Window].PinnedLogProfiles.Count}" Text="{DynamicResource String/LogProfileSelectionDialog.OtherLogProfiles}"/>
							<TextBlock Classes="Dialog_TextBlock_Header1" IsVisible="{Binding !$parent[Window].PinnedLogProfiles.Count}" Text="{DynamicResource String/LogProfileSelectionDialog.AllLogProfiles}"/>
						</Panel>
					</Border>
					<ListBox Name="otherLogProfileListBox" Classes="LogProfiles" Items="{Binding $parent[Window].OtherLogProfiles}" SelectionChanged="OnOtherLogProfilesSelectionChanged">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="Margin" Value="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Margin}"/>
								<Setter Property="Padding" Value="0"/>
							</Style>
						</ListBox.Styles>
					</ListBox>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

				<!-- Template profiles -->
				<StackPanel HorizontalAlignment="Stretch" IsVisible="{Binding $parent[Window].TemplateLogProfiles.Count}" Orientation="Vertical">
					<Border Classes="Dialog_TextBlock_Header1" Margin="{DynamicResource Thickness/LogProfileSelectionDialog.Label.Margin}">
						<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/LogProfileSelectionDialog.TemplateLogProfiles}"/>
					</Border>
					<ListBox Name="templateLogProfileListBox" Classes="LogProfiles" Items="{Binding $parent[Window].TemplateLogProfiles}" SelectionChanged="OnTemplateLogProfilesSelectionChanged">
						<ListBox.Styles>
							<Style Selector="ListBoxItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								<Setter Property="Margin" Value="{DynamicResource Thickness/LogProfileSelectionDialog.LogProfile.Margin}"/>
								<Setter Property="Padding" Value="0"/>
							</Style>
						</ListBox.Styles>
					</ListBox>
					<Separator Classes="Dialog_Separator"/>
				</StackPanel>

			</StackPanel>
		</ScrollViewer>
		
	</DockPanel>
	
</Window>
